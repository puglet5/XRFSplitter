name: pyinstaller

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-latest', 'windows-latest']

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: 3.11
        cache: 'pipenv'

    - run: pip install pipenv
    - run: pipenv install -d
    - run: |
            if [ "$RUNNER_OS" == "Linux" ]; then
              pipenv run pyinstaller --noconfirm --onefile --windowed \
              --hidden-import=tkinter --hidden-import=tkinter.filedialog --hidden-import=tkinter.font --hidden-import=tkinter.ttk \
              --hidden-import='PIL._tkinter_finder' \
              --add-data "$(PIPENV_VERBOSITY=-1 pipenv run pip show customtkinter | grep -i location | awk '{ print $NF }')/customtkinter:customtkinter/" \
              --add-data "$(PIPENV_VERBOSITY=-1 pipenv run pip show darkdetect | grep -i location | awk '{ print $NF }')/darkdetect:darkdetect/" \
              ./app/main.py
            elif [ "$RUNNER_OS" == "Windows" ]; then
              pipenv run pyinstaller --noconfirm --onefile --windowed \
              --hidden-import=tkinter --hidden-import=tkinter.filedialog --hidden-import=tkinter.font --hidden-import=tkinter.ttk \
              --hidden-import='PIL._tkinter_finder' \
              --add-data "$(PIPENV_VERBOSITY=-1 pipenv run pip show customtkinter | grep -i location | awk '{ print $NF }')/customtkinter;customtkinter/" \
              --add-data "$(PIPENV_VERBOSITY=-1 pipenv run pip show darkdetect | grep -i location | awk '{ print $NF }')/darkdetect;darkdetect/" \
              ./app/main.py
            else
              echo "$RUNNER_OS not supported"
              exit 1
            fi
      shell: bash
    - uses: actions/upload-artifact@v3
      with:
        path: dist/*
